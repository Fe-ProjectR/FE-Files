local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "SSided",
   Icon = scroll-text, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "SSided Universal",
   LoadingSubtitle = "by Noli and Alice",
   Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "SSided Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("Our Creation", scroll-text) -- Title, Image
local Section = Tab:CreateSection("R6 Universal")
Section:Set("R6 Universal")
local Divider = Tab:CreateDivider()
Divider:Set(true) -- Whether the divider's visibility is to be set to true or false.
Rayfield:Destroy()
Rayfield:Notify({
   Title = "Welcome User",
   Content = "Bolll",
   Duration = 6.5,
   Image = "rewind",
})
local Button = Tab:CreateButton({
   Name = "Fe Figher",
   Callback = function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/Fe-ProjectR/FE-Files/refs/heads/main/Fe%20gale.lua"))("cool")
-- The function that takes place when the button is pressed
   end,
})
Button:Set("Fe Fighter")
local Keybind = Tab:CreateKeybind({
   Name = "Keybind Example",
   CurrentKeybind = "Q",
   HoldToInteract = false,
   Flag = "Keybind1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Keybind)
   -- The function that takes place when the keybind is pressed
   -- The variable (Keybind) is a boolean for whether the keybind is being held or not (HoldToInteract needs to be true)
   end,
})
Keybind:Set("RightCtrl") -- Keybind (string)
local Label = Tab:CreateLabel("Label Example", rewind, Color3.fromRGB(255, 255, 255), false) -- Title, Icon, Color, IgnoreTheme
Label:Set("Label Example", rewind, Color3.fromRGB(255, 255, 255), false) -- Title, Icon, Color, IgnoreTheme
local Paragraph = Tab:CreateParagraph({Title = "Paragraph Example", Content = "Paragraph Example"})
Paragraph:Set({Title = "Paragraph Example", Content = "Paragraph Example"})
Rayfield:LoadConfiguration()
